<div class = "cover_image">
  <div class = "band">
    <div class ="main-title">
      <h1>kari title</h1>
    </div>
  </div>
</div>
<div class = "all_contents">
  <div class = "plan_contents">
  <h3 class = "plan_finding">一覧</h3>
    <div class="row">
        <% @plans.each do |plan| %>
          <div class="col-sm-4">
            <%= link_to("/plans/#{plan.id}", method: :get) do %>
              <div class="card" >
                <%= image_tag plan.image.to_s, class:"card-img-top" %>
                <div class="card-body">
                  <h4 class="card-title">
                    <%= link_to plan.title, "/plans/#{plan.id}", method: :get %>
                  </h4>
                  <p class="card-text">
                    <%= plan.details %>
                  </p>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
    </div>
    
    <div class = "map_contents">
      <h3 class = "plan_finding">地図でイベントを探してみる</h3>
      <%= link_to('')%>
      <div id = 'target'>
        <%# <iframe src="https://www.google.com/maps/d/u/0/embed?mid=1Oo8-ske08sW3WFZBP3OL8NA8U4SWXj4q" width="900" height="700"></iframe> %>
      </div>
      <%# <div class = "map_contents_image"> %>
    </div>
  </div>
</div>
  
</div>


<script
  src = "https://maps.googleapis.com/maps/api/js?language=ja&region=JP&key=AIzaSyDhIlN8n5iDAU93Fn8CGhnbiHHlxXtH9i8&callback=initMap" async defer></script>
<script>

function initMap(){
  'use strict';

  var target = document.getElementById('target');
  var geocoder = new google.maps.Geocoder();
  var map;
  
  // var map = map;
  // var tokyo = {lat: 35.681167, lng: 139.767052};

  // map = new google.maps.Map(target,{
  //   center: tokyo,
  //   zoom: 15
  // });
  


      // var map = new google.maps.Map(document.getElementById("target"));

      // var latlng = map.getCenter();
      
  function addressConversion(map) {
    // countrycode(Area, origin="country.name", destination="iso2c")
    var latlng = map.getCenter();
      //現在Google cloud platformを有料にしていないため動作しない。完成まえに有料枠にすること
      geocoder.geocode({
        location: latlng
          },function(results, status) {
            if (status !== 'ok') {
              alert('Failed: '+ status);
              return;
            }
            //results[0].formatted_addressに返ってきた住所が入っている
            if (results[0]){
              new google.maps.Marker({
                position: latLng,
                map: map,
                title: results[0].
                formatted_address,
                animation: google.maps.Animation.DROP
              });
            }else{
              alert('No results found');
              return;
            }
          console.log(results[0]);
        });
  }

  function showMap(callback){
    if(!navigator.geolocation){
        alert('Geolocation not supported');
        return;
      }
      navigator.geolocation.getCurrentPosition(function(position){
        map = new google.maps.Map(target, {
          center: {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          },
          zoom: 15
        });
        let lat = position.coords.latitude;
        let lng = position.coords.longitude;
        // return {lat: lat, lng: lng};
        if (('sessionStorage' in window) && (window.sessionStorage !== null)) {
          // この3行どれもセッション情報を保存している。（結果は等価）
          sessionStorage.setItem('session_save_lat',lat);
          window.sessionStorage.setItem('session_save_lng', lng);
          // sessionStorage.session_save = 1
          console.log("lat");
          console.log(lat);
          console.log("session_save_lat");
          console.log(session_save_lat);
          
        };
        callback(map);
      }, function(){
        alert('Geolocation failed!');
        return;
      });
  }

  var map = showMap(addressConversion);

  //ここからマーカーを落とす(marker落としもgeocoding必要)
  map.addListener('click', function(e) {
    geocoder.geocode({
      location: e.latLng
    }, function(results, status) {
      if (status !== 'OK') {
        alert('Failed: '+ status);
        return;
      }
      if (results[0]){
        new google.maps.Marker({
          position: e.latLng,
          map: map,
          title: results[0].formatted_address,
          animation: google.maps.Animation.DROP
        });
      }else{
        alert('No results found');
        return;
      }
    });
  });

    // map.addListener('load', function(e) {
      // geocoder.geocode({
      //   location: {
      //     lat: position.coords.latitude,
      //     lng: position.coords.longitude
      //   }, function(results, status) {
      //     if (status !== 'ok') {
      //       alert('Failed: ' +status);
      //       return;
      //     }
      //     if (results[0]) {
      //       new google.maps.Marker({
      //         position: {
      //           lat: position.coords.latitude,
      //           lng: position.coords.longitude
      //         }
      //         map: map,
      //         title: results[0].formatted_address,
      //         animation: google.maps.Animation.DROP
      //       });
      //     }else {
      //       alert('No results found');
      //       return;
      //     }
      //   }
      // });
    // });

}

</script>
